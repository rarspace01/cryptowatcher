# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE: 'cryptowatcher'
  GHCR: 'ghcr.io'

jobs:
  buildFatJarForJVM:
    name: Build JVM jar application
    runs-on: ubuntu-latest
    outputs:
      tag-version: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build dockerImageString
        run: |
          ref="${GITHUB_REF_NAME////-}"
          repositoryOwner="${GITHUB_REPOSITORY_OWNER}"
          sha="${GITHUB_SHA}"
          echo $ref
          dockerImageString="$ref-$sha"
          echo ${dockerImageString,,}
          echo "dockerImageString=${dockerImageString,,}">>$GITHUB_ENV
          echo "repositoryOwner=${repositoryOwner,,}">>$GITHUB_ENV
          echo "dockerImageString=${dockerImageString,,}"
          echo "repositoryOwner=${repositoryOwner,,}"
      - name: Use Gradle packages cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.*') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Bump version and push tag
        if: ${{ github.actor != 'dependabot[bot]' }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TFDB_APIKEY: ${{ secrets.TFDB_APIKEY }}
          PREMIUMIZE_APIKEY: ${{ secrets.PREMIUMIZE_APIKEY }}
          ALLDEBRID_APIKEY: ${{ secrets.ALLDEBRID_APIKEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: ./gradlew build -Dquarkus.package.type=uber-jar
      - uses: actions/upload-artifact@v2
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        with:
          name: jvmArtifacts-${{ github.sha }}
          path: |
            ./build/*-runner.jar
          retention-days: 1
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.repositoryOwner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          github_ref: ${{ github.ref }}
          github_sha: ${{ github.sha }}
          github_run_number: ${{ github.run_number }}
      - name: Build docker image
        env:
          DOCKER_IMAGE: ${{ env.dockerImageString }}
        run: docker build -t "${{ env.GHCR }}/${{ env.repositoryOwner }}/${{ env.SERVICE }}:${{ env.DOCKER_IMAGE }}" .
      - name: Tag docker image
        env:
          DOCKER_IMAGE: ${{ env.dockerImageString }}
        run: docker tag "${{ env.GHCR }}/${{ env.repositoryOwner }}/${{ env.SERVICE }}:${{ env.DOCKER_IMAGE }}" "${{ env.GHCR }}/${{ env.repositoryOwner }}/${{ env.SERVICE }}:latest"
      - name: Push docker image
        env:
          DOCKER_IMAGE: ${{ env.dockerImageString }}
        run: |
          docker push "${{ env.GHCR }}/${{ env.repositoryOwner }}/${{ env.SERVICE }}:${{ env.DOCKER_IMAGE }}"
          docker push "${{ env.GHCR }}/${{ env.repositoryOwner }}/${{ env.SERVICE }}:latest"
  buildFatJarForGraalVM:
    name: Build GraalVM jar application
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 17
          graalvm-version: 22.0.0.2
          native-image: true
      - run: java -version
      - name: Build with Gradle (GraalVM)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew assemble -Dquarkus.package.type=native
      - run: native-image --no-fallback --allow-incomplete-classpath -jar "./build/*-runner.jar" boatImage
      - uses: actions/upload-artifact@v2
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        with:
          name: graalVmArtifacts-${{ github.sha }}
          path: |
            ./cryptoWatcher
          retention-days: 1
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.repositoryOwner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          github_ref: ${{ github.ref }}
          github_sha: ${{ github.sha }}
          github_run_number: ${{ github.run_number }}
      - name: Build docker image
        env:
          DOCKER_IMAGE: ${{ env.dockerImageString }}
        run: docker build -t ":graalvm-${{ env.DOCKER_IMAGE }}" .
#  releaseJob:
#    name: Create Github Release
#    runs-on: ubuntu-latest
#    needs: [buildFatJarForJVM, buildFatJarForGraalVM]
#    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - uses: actions/download-artifact@v2
#        with:
#          name: jvmArtifacts-${{ github.sha }}
#      - uses: actions/download-artifact@v2
#        with:
#          name: graalVmArtifacts-${{ github.sha }}
#      - name: Release
#        if: ${{ github.actor != 'dependabot[bot]' }}
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: ${{ needs.buildFatJarForJVM.outputs.tag-version }}
#          files: |
#            boat.jar
#            boatImage
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#  restartServerJob:
#    name: Restart the Server
#    runs-on: ubuntu-latest
#    needs: [releaseJob]
#    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
#    steps:
#      - name: Restart server
#        uses: wei/curl@master
#        with:
#          args: ${{ secrets.SERVERURL }}/boat/shutdown|| true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}